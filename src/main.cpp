#include <filesystem>
#include <fstream>
#include <iostream>
#include "core/Keylist.hpp"
#include "utils/FileUtils.hpp"

namespace fs = std::filesystem;
using json = nlohmann::json;

int main() {
    // Create a Keylist object
    Keylist keylist;
    DailyKey april20Key;
    april20Key.rotors = {"I", "II", "III"};
    april20Key.ringPosition = {10, 14, 2};
    april20Key.plugboard = {"OM", "KO", "GZ", "FS", "BD", "AE", "VX", "LI", "RJ", "UN"};
    april20Key.keyGroups = {"wci", "xcb", "jjf", "hys"};
    keylist.getDailyKeys()["20-04-2025"] = april20Key;
    keylist.getDecoyGroups()[0] = "vxh";
    keylist.getDecoyGroups()[1] = "fio";
    // ... populate more decoys if needed

    // Serialization (Keylist object to JSON)
    json j = keylist;
    std::cout << "Serialized JSON:\n" << j.dump(4) << std::endl;

    // You can write the JSON to a file:

    auto path = FileUtils::getUserDataDirectory("enigma") / "Keylists" / "main.json";
    fs::create_directories(fs::path(path).parent_path());

    std::ofstream outfile(path);
    outfile << j.dump(4) << std::endl;
    outfile.close();

    // Deserialization (JSON from string or file back to Keylist object)
    std::ifstream infile(path);
    json j_from_file;
    infile >> j_from_file;
    infile.close();

    Keylist loaded_keylist =
        j_from_file.get<Keylist>();  // Implicitly uses the from_json generated by the macro

    std::cout << "\nLoaded Keylist - Daily Key for 20-04-2025:\n";
    std::cout << "  Rotors: " << loaded_keylist.getDailyKeys()["20-04-2025"].rotors[0] << ", "
              << loaded_keylist.getDailyKeys()["20-04-2025"].rotors[1] << ", "
              << loaded_keylist.getDailyKeys()["20-04-2025"].rotors[2] << std::endl;
    std::cout << "  First Decoy: " << loaded_keylist.getDecoyGroups()[0] << std::endl;

    return 0;
}
